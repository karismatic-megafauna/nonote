{"version":3,"sources":["../src/utils.js"],"names":["removeNote","completeNote","incompleteNote","failNote","createDir","getRootDir","getDateDir","initializeNotes","changeStatus","makeNote","removeSection","createSection","addNote","arry","index","splice","path","templateDest","templateFile","mkdirsSync","closeSync","openSync","writeJsonSync","console","log","green","config","process","env","HOME","readJsonSync","notesDirectory","today","format","notesDir","days","toDir","userDir","lastChar","substr","length","slice","doubleIndex","indexOf","rcFile","dotFileJSON","cyan","key","cb","configPath","readJson","err","configJSON","error","toData","dataJSON","cliFound","forEach","note","noteIndex","items","Error","writeJson","exit","emptyFunc","notesData","dir","toMd","noteMd","createWriteStream","section","cliRef","write","title","item","status","checkBox","itemIndex","description","on","end","dataPath","Object","keys","map","name","noteObj","noteString","reduce","memo","word","descriptionObj","push"],"mappings":"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","file":"utils.js","sourcesContent":["import fs from 'fs-extra';\nimport moment from 'moment';\nimport chalk from 'chalk';\nimport templateJSON from '../templates/default.json';\n\nexport function removeNote(arry, index) {\n  arry.splice(index, 1);\n}\n\nexport function completeNote(arry, index) {\n  arry[index]['status'] = 'complete';\n}\n\nexport function incompleteNote(arry, index) {\n  arry[index]['status'] = 'incomplete';\n}\n\nexport function failNote(arry, index) {\n  arry[index]['status'] = 'failed';\n}\n\nexport function createDir(path) {\n  var templateDest = path + '/templates/';\n  var templateFile = path + '/templates/default.json';\n  fs.mkdirsSync(path);\n  fs.mkdirsSync(templateDest);\n  fs.closeSync(fs.openSync(templateFile, 'w'));\n  fs.writeJsonSync(templateFile, templateJSON);\n  console.log(chalk.green('Success!'));\n}\n\nexport function getRootDir() {\n  var config = `${process.env.HOME}/.nonoterc.json`;\n  // TODO: handle the case of `nonote new` when `nonote init` has not been run\n  return fs.readJsonSync(config).notesDirectory;\n}\n\nexport function getDateDir() {\n  const today = moment().format(\"DD-MM-YYYY\");\n  const notesDir = getRootDir();\n  const days = `${notesDir}/days/`;\n  const toDir = days + today;\n  return toDir;\n}\n\nexport function initializeNotes(userDir) {\n  var lastChar = userDir.substr(userDir.length - 1);\n  if ( lastChar === \"/\" ) {\n    userDir = userDir.slice(0, -1);\n  }\n\n  var doubleIndex = userDir.indexOf(\"//\");\n  if ( doubleIndex > -1 ) {\n    userDir = userDir.slice(0, doubleIndex) + userDir.slice(doubleIndex + 1);\n  }\n\n  var rcFile = `${process.env.HOME}/.nonoterc.json`;\n  fs.closeSync(fs.openSync(rcFile, 'w'));\n\n  var dotFileJSON = {}\n  dotFileJSON.notesDirectory = userDir;\n\n  fs.writeJsonSync(rcFile, dotFileJSON);\n  console.log(`\\ndotfile \".nonoterc.json\" created at ${process.env.HOME}` );\n  console.log(' ');\n  console.log('Notes will be made in this directory: ')\n  console.log(chalk.cyan(dotFileJSON.notesDirectory));\n  console.log(' ');\n}\n\nexport function changeStatus(index, key, cb) {\n  const today = moment().format(\"DD-MM-YYYY\");\n  var configPath = `${process.env.HOME}/.nonoterc.json`;\n  fs.readJson(configPath, (err, configJSON) => {\n    if (err) console.error(err)\n\n    const notesDir = configJSON.notesDirectory;\n    const days = `${notesDir}/days/`;\n    const toDir = days + today;\n    var toData = `${toDir}/data.json`;\n\n    fs.readJson(toData, (err, dataJSON) => {\n      if (err) console.error(err)\n\n      var cliFound = false;\n      dataJSON.forEach((note, noteIndex) => {\n        if (note['cli-ref'] === key) {\n          cliFound = true;\n          if (!note.items[index]) {\n            throw new Error(`index ${index} in \"${key}\" object does not exist`);\n          }\n          cb(note.items, index);\n          fs.writeJson(toData, dataJSON, (err) => {\n            if (err) return console.error(err)\n\n            makeNote(dataJSON, () => {process.exit();});\n          });\n        } else if (dataJSON.length === (noteIndex + 1) && !cliFound) {\n          throw new Error(`\"${key}\" <cli-ref> does not exist`);\n        }\n      });\n    });\n  });\n}\n\nvar emptyFunc = () => {};\n\nexport function makeNote(notesData, cb = emptyFunc) {\n  var dir = getDateDir();\n  var toMd = `${dir}/note.md`;\n  var noteMd = fs.createWriteStream(toMd);\n\n  notesData.forEach((section) => {\n    var cliRef = section['cli-ref'];\n    noteMd.write(`# ${section.title} --> ${cliRef}\\n`);\n    section.items.forEach((item, index) => {\n      var status = item.status;\n      var checkBox = '- [ ]';\n      var itemIndex = ` ${index}.) `;\n      if (status === 'complete') {\n        checkBox = '- [x]';\n      } else if (status === 'failed') {\n        checkBox = '- [-]';\n      }\n      noteMd.write(checkBox + itemIndex + item.description + \"\\n\");\n    });\n    noteMd.write(\"\\n\");\n  });\n  noteMd.on('finish', cb);\n  noteMd.end();\n}\n\nexport function removeSection(section) {\n  const today = moment().format(\"DD-MM-YYYY\");\n  var configPath = `${process.env.HOME}/.nonoterc.json`;\n  fs.readJson(configPath, (err, configJSON) => {\n    const notesDir = configJSON.notesDirectory;\n    const days = `${notesDir}/days/`;\n    const dir = days + today;\n    var dataPath = `${dir}/data.json`;\n    fs.readJson(dataPath, (err, dataJSON) => {\n\n      Object.keys(dataJSON).map(note => {\n        if ( dataJSON[note]['cli-ref'] === section ) {\n          console.log(`\"${chalk.cyan(note)}\" section was removed!`);\n          delete dataJSON[note];\n        }\n      });\n\n      fs.writeJson(dataPath, dataJSON, (err) => {\n        if (err) return console.error(err)\n\n        makeNote(dataJSON);\n      })\n    });\n  });\n}\n\nexport function createSection(name, cliRef, description = 'no description') {\n  const today = moment().format(\"DD-MM-YYYY\");\n  var configPath = `${process.env.HOME}/.nonoterc.json`;\n  fs.readJson(configPath, (err, configJSON) => {\n    const notesDir = configJSON.notesDirectory;\n    const days = `${notesDir}/days/`;\n    const dir = days + today;\n    var dataPath = `${dir}/data.json`;\n    fs.readJson(dataPath, (err, dataJSON) => {\n      dataJSON[name] = {\n        'cli-ref': cliRef,\n        'description': description,\n        'items': []\n      };\n\n      fs.writeJson(dataPath, dataJSON, (err) => {\n        if (err) return console.error(err)\n\n        makeNote(dataJSON, () => {process.exit();});\n      })\n    });\n  });\n}\n\nexport function addNote(noteObj, key) {\n  const today = moment().format(\"DD-MM-YYYY\");\n  var configPath = `${process.env.HOME}/.nonoterc.json`;\n  fs.readJson(configPath, (err, configJSON) => {\n    if (err) console.error(err)\n\n    const notesDir = configJSON.notesDirectory;\n    const days = `${notesDir}/days/`;\n    const toDir = days + today;\n    const dataPath = `${toDir}/data.json`;\n\n    var noteString = noteObj.reduce(function(memo, word){\n      return memo + ' ' + word;\n    });\n\n    var descriptionObj = {\n      description: noteString,\n      status: 'incomplete',\n    };\n\n    fs.readJson(dataPath, (err, dataJSON) => {\n      dataJSON.forEach((note) => {\n        if (note['cli-ref'] === key) {\n          note.items.push(descriptionObj);\n          fs.writeJson(dataPath, dataJSON, (err) => {\n            if (err) return console.error(err)\n\n            makeNote(dataJSON, () => {process.exit();});\n          });\n        }\n      });\n    });\n  });\n}\n"]}