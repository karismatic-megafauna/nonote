{"version":3,"sources":["../src/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n\nimport { install } from 'source-map-support';\ninstall();\n\nimport 'babel-polyfill';\n// Libs\nimport chalk from 'chalk';\nimport program from 'commander';\nimport fs from 'fs-extra';\nimport moment from 'moment';\nimport co from 'co';\nimport prompt from 'co-prompt';\nimport * as Utils from './utils';\n\nprogram\n  .version('0.0.1')\n  .command('new [template]')\n  .alias('n')\n  .description('create a new note for the day')\n  .action(function(template, cmd) {\n    if(!template) {\n      template = 'default';\n    }\n    const today = moment().format(\"DD-MM-YYYY\");\n    const yesterday = moment().subtract(1, 'day').format(\"DD-MM-YYYY\");\n    var configPath = `${process.env.HOME}/.nonoterc.json`;\n\n    fs.readJson(configPath, (err, configObj) => {\n      if (err) console.error(err)\n\n      const notesDir = configObj.notesDirectory;\n      const days = `${notesDir}/days/`;\n      const todayPath = days + today;\n      const yesterdayPath = days + yesterday;\n      const yesterdayDataJSONPath= `${yesterdayPath}/data.json`;\n      const dataJSONPath = `${todayPath}/data.json`;\n      const noteMdPath = `${todayPath}/note.md`;\n\n      const templateDataPath = `${notesDir}/templates/${template}.json`;\n\n      fs.mkdirs(todayPath, (err) => {\n        if (err) console.error(err)\n\n        fs.copy(templateDataPath, dataJSONPath, (err) => {\n          if (err) console.error(err)\n\n          fs.readJson(yesterdayDataJSONPath, (err, yesterdayObj) => {\n            let hasPreviousNote = true;\n            let incompleteTasks = [];\n\n            if (err && err.code === 'ENOENT') {\n              hasPreviousNote = false;\n            }\n\n            if (hasPreviousNote) {\n              incompleteTasks = Object.keys(yesterdayObj).map(section => {\n                return yesterdayObj[section].items.filter(item => {\n                  return item.status !== \"complete\"\n                });\n              })[0];\n            }\n\n            fs.readJson(dataJSONPath, (err, noteObj) => {\n              console.log(`Creating new note from the ${chalk.green(template)} template...`);\n              if (hasPreviousNote && incompleteTasks.length > 0) {\n                console.log(`\\nCopying ${chalk.cyan(incompleteTasks.length)} incomplete tasks from yesterday:`);\n                incompleteTasks.forEach((task, i) => console.log(`   ${chalk.cyan(i)}.) ${task.description}`));\n                const firstNote = Object.keys(noteObj)[0];\n                const mergedItems = [ ...incompleteTasks, ...noteObj[firstNote].items ];\n                noteObj[firstNote].items = mergedItems;\n              }\n\n              Utils.makeNote(noteObj);\n              const watchCmd = 'nono watch';\n              console.log(`\\nGreat success! Here is your note for today: \\n${chalk.cyan(noteMdPath)}`);\n              console.log(`\\nYou can see the note by running ${chalk.green(watchCmd)} anywhere in your console!`);\n            });\n          });\n        });\n      });\n    });\n  });\n\n\nprogram\n  .command('watch')\n  .alias('w')\n  .description('watches todays note')\n  .action(function(){\n    co(function *() {\n      const today = moment().format(\"DD-MM-YYYY\");\n      var configPath = `${process.env.HOME}/.nonoterc.json`;\n      fs.readJson(configPath, (err, configJSON) => {\n        if (err) console.error(err)\n\n        const notesDir = configJSON.notesDirectory;\n        const days = `${notesDir}/days/`;\n        const toDir = days + today;\n        const noteMd = `${toDir}/note.md`;\n\n        fs.access(noteMd, fs.constants.F_OK, (err) => {\n          if (err && err.code === 'ENOENT') {\n            const badNotePath = chalk.cyan(noteMd);\n            const newNoteCmd = chalk.green('nono new');\n            console.log(`\nOh man, oh jeez, ok, I-I-I can't access this note:\n${badNotePath}\n\nC-c-can you try m-m-making a new note or s-s-something?\n${newNoteCmd}\n            `);\n            return;\n          }\n\n          fs.readFile(noteMd, (err, data) => {\n            if (err) throw err;\n            console.log('\\x1Bc');\n            console.log(data.toString());\n          });\n\n          fs.watch(noteMd, () => {\n            fs.readFile(noteMd, (err, data) => {\n              if (err) throw err;\n              console.log('\\x1Bc');\n              console.log(data.toString());\n            });\n          });\n        });\n      });\n    });\n  });\n\n\nprogram\n  .command('section')\n  .alias('s')\n  .description('create new section')\n  .action(function() {\n    co(function *() {\n      const sectionName = yield prompt('New section name: ');\n      const cliRefName = yield prompt('Cli reference key: ');\n      const description = yield prompt('Short description: ');\n\n      Utils.createSection(sectionName, cliRefName, description);\n\n      console.log(chalk.green(`new section '${sectionName}' was created!`));\n    });\n  });\n\nprogram\n  .command('init')\n  .description('initializes notes')\n  .action(function() {\n    co(function *() {\n      const notesDirPath = yield prompt('notes directory path (from $HOME): ');\n      const homePath = `${process.env.HOME}/${notesDirPath}`;\n      Utils.initializeNotes(homePath);\n\n      const shouldCreate = yield prompt.confirm(`Would you like me to create \"${homePath}\" for you?(Recommended) [y/N] `);\n      Utils.createDir(shouldCreate, homePath);\n      console.log('Start taking notes with', chalk.cyan('nonote new!'));\n      // TODO: create a readme\n      process.exit();\n    })\n  });\n\nprogram\n  .command('add <cli-ref> [notes...]')\n  .alias('a')\n  .description('add note to object')\n  .action(function(ref, note) {\n    try {\n      Utils.addNote(note, ref);\n      console.log(chalk.green('note added!'));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\nprogram\n  .command('remove <cli-ref> [index]')\n  .alias('r')\n  .option('-s, --section', 'remove a seciton')\n  .description('remove note from note object')\n  .action(function(ref, note, options) {\n    if (options.section && note === undefined) {\n      Utils.removeSection(ref);\n    } else {\n      try {\n        Utils.changeStatus(note, ref, Utils.removeNote);\n        console.log(chalk.green(`note at index[${note}] was removed!`));\n      } catch (e) {\n        console.log(chalk.red(e));\n      }\n    }\n  });\n\nprogram\n  .command('complete <cli-ref> [index]')\n  .alias('c')\n  .description('mark item as complete')\n  .action(function(ref, note) {\n    try {\n      Utils.changeStatus(note, ref, Utils.completeNote);\n      console.log(chalk.green(`note at index[${note}] was marked as complete!`));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\nprogram\n  .command('incomplete <cli-ref> [index]')\n  .alias('i')\n  .description('mark item as incomplete')\n  .action(function(ref, note) {\n    try {\n      Utils.changeStatus(note, ref, Utils.incompleteNote);\n      console.log(chalk.green(`note at index[${note}] was marked as incomplete!`));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\n\nprogram\n  .command('failed [cli-ref] <index>')\n  .alias('f')\n  .description('mark item as failed')\n  .action(function(ref, note) {\n    try {\n      Utils.changeStatus(note, ref, Utils.failNote);\n      console.log(chalk.green(`note at index[${note}] was marked as failed :(`));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\n  program.parse(process.argv);\n\n"]}