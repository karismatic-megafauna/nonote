{"version":3,"sources":["../src/main.js"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\n\nimport { install } from 'source-map-support';\ninstall();\n\nimport 'babel-polyfill';\n// Libs\nimport chalk from 'chalk';\nimport program from 'commander';\nimport fs from 'fs-extra';\nimport moment from 'moment';\nimport co from 'co';\nimport prompt from 'co-prompt';\nimport templateJSON from '../templates/default.json';\nimport { exec } from 'child_process';\n\nvar emptyFunc = () => {};\n\nfunction makeNote(jsonObj, cb = emptyFunc) {\n  var dir = getDateDir();\n  var toMd = `${dir}/note.md`;\n  var noteMd = fs.createWriteStream(toMd);\n\n  Object.keys(jsonObj).map(function(title) {\n    var cliRef = jsonObj[title]['cli-ref'];\n    noteMd.write(`# ${title} --> ${cliRef}\\n`);\n    Object.keys(jsonObj[title]['items']).map(function(items, index){\n      var status = jsonObj[title]['items'][items]['status'];\n      var checkBox = '- [ ]';\n      var itemIndex = ` ${index}.) `;\n      if (status === 'complete') {\n        checkBox = '- [x]';\n      } else if (status === 'failed') {\n        checkBox = '- [-]';\n      }\n      noteMd.write(checkBox + itemIndex + jsonObj[title]['items'][items]['description'] + \"\\n\");\n    });\n    noteMd.write(\"\\n\");\n  });\n  noteMd.on('finish', cb);\n  noteMd.end();\n  // console.log(`note for ${dir} modified!`);\n}\n\nfunction removeSection(section) {\n  var dir = getDateDir();\n  var toData = `${dir}/data.json`;\n  var dataJSON = fs.readJsonSync(toData);\n\n  Object.keys(dataJSON).map(note => {\n    if ( dataJSON[note]['cli-ref'] === section ) {\n      console.log(`\"${chalk.cyan(note)}\" section was removed!`);\n      delete dataJSON[note];\n    }\n  });\n\n  fs.writeJsonSync(toData, dataJSON);\n  makeNote(dataJSON);\n}\n\nfunction createSection(name, cliRef, description = 'no description') {\n  var dir = getDateDir();\n  var toData = `${dir}/data.json`;\n  var dataJSON = fs.readJsonSync(toData);\n  dataJSON[name] = {\n    'cli-ref': cliRef,\n    'description': description,\n    'items': []\n  };\n  fs.writeJsonSync(toData, dataJSON);\n  makeNote(dataJSON, () => {process.exit();});\n\n  // TODO: make makenote sycronus\n}\n\nfunction addNote(noteObj, key) {\n  var dir = getDateDir();\n  var toData = `${dir}/data.json`;\n  var dataJSON = fs.readJsonSync(toData);\n  var noteString = noteObj.reduce(function(memo, word){\n    return memo + ' ' + word;\n  });\n\n  var descriptionObj = {\n    description: noteString,\n    status: 'incomplete',\n  };\n\n  // modify toData\n  Object.keys(dataJSON).map(function(note){\n    if (dataJSON[note]['cli-ref'] === key) {\n      dataJSON[note]['items'].push(descriptionObj);\n      fs.writeJsonSync(toData, dataJSON);\n    }\n  });\n  makeNote(dataJSON);\n}\n\nfunction changeStatus(index, key, cb) {\n  var dir = getDateDir();\n  var toData = `${dir}/data.json`;\n  var dataJSON = fs.readJsonSync(toData);\n  var cliFound = false;\n  Object.keys(dataJSON).map(function(note, noteIndex){\n    if (dataJSON[note]['cli-ref'] === key) {\n      cliFound = true;\n      if (!dataJSON[note]['items'][index]) {\n        throw new Error(`index ${index} in \"${key}\" object does not exist`);\n      }\n      cb(dataJSON[note]['items'], index);\n      fs.writeJsonSync(toData, dataJSON);\n    } else if (Object.keys(dataJSON).length === (noteIndex + 1) && !cliFound) {\n      throw new Error(`\"${key}\" <cli-ref> does not exist`);\n    }\n  });\n  makeNote(dataJSON);\n}\n\nfunction removeNote(arry, index) {\n  arry.splice(index, 1);\n}\n\nfunction completeNote(arry, index) {\n  arry[index]['status'] = 'complete';\n}\n\nfunction incompleteNote(arry, index) {\n  arry[index]['status'] = 'incomplete';\n}\n\nfunction failNote(arry, index) {\n  arry[index]['status'] = 'failed';\n}\n\nfunction initializeNotes(userDir) {\n  var lastChar = userDir.substr(userDir.length - 1);\n  if ( lastChar === \"/\" ) {\n    userDir = userDir.slice(0, -1);\n  }\n\n  var doubleIndex = userDir.indexOf(\"//\");\n  if ( doubleIndex > -1 ) {\n    userDir = userDir.slice(0, doubleIndex) + userDir.slice(doubleIndex + 1);\n  }\n\n  var rcFile = `${process.env.HOME}/.nonoterc.json`;\n  fs.closeSync(fs.openSync(rcFile, 'w'));\n\n  var dotFileJSON = {}\n  dotFileJSON.notesDirectory = userDir;\n\n  fs.writeJsonSync(rcFile, dotFileJSON);\n  console.log(chalk.green('Success!'));\n  console.log(' ');\n  console.log('dotfile `.nonoterc.json` created at $HOME' );\n  console.log(' ');\n  console.log('Notes will be made in this directory: ')\n  console.log(chalk.cyan(dotFileJSON.notesDirectory));\n  console.log(' ');\n}\n\nfunction getRootDir() {\n  var config = `${process.env.HOME}/.nonoterc.json`;\n  // TODO: handle the case of `nonote new` when `nonote init` has not been run\n  return fs.readJsonSync(config).notesDirectory;\n}\n\nfunction getDateDir(type) {\n  var today = moment().format(\"DD-MM-YYYY\");\n  var notesDir = getRootDir();\n  var days = `${notesDir}/days/`;\n  var toDir = days + today;\n  return toDir;\n}\n\nfunction createDir(create, path) {\n  var templateDest = path + '/templates/';\n  var templateFile = path + '/templates/default.json';\n  if (create) {\n    fs.mkdirsSync(path);\n    fs.mkdirsSync(templateDest);\n    fs.closeSync(fs.openSync(templateFile, 'w'));\n    fs.writeJsonSync(templateFile, templateJSON);\n    console.log(' ');\n    console.log(chalk.green('Success!'));\n  } else {\n    console.log(' ');\n    console.log('Make sure that dir exists and has a templates dir in it with a note config!');\n  }\n}\n\nprogram\n  .version('0.0.1')\n  .command('new [template]')\n  .alias('n')\n  .description('create a new note for the day')\n  .action(function(template, cmd) {\n    if(!template) {\n      template = 'default';\n    }\n    var notePath = getDateDir();\n    var noteJSON = `${notePath}/data.json`;\n    var rootDir = getRootDir();\n    var templateData = `${rootDir}/templates/${template}.json`;\n\n    console.log(`creating new note from the ${chalk.cyan(template)} template!`);\n\n    fs.mkdirsSync(notePath);\n    fs.copySync(templateData, noteJSON);\n    makeNote(fs.readJsonSync(noteJSON));\n\n    console.log(`\\nnew note created for today: \\n${chalk.cyan(notePath)}`);\n  });\n\nprogram\n  .command('watch')\n  .alias('w')\n  .description('watches todays note')\n  .action(function(){\n    let notePath = getDateDir();\n    let noteMd = `${notePath}/note.md`;\n    // fs.statSync(noteMd, (err, stats) => {\n    //   if (err) {\n    //     throw new Error('No note.md! Run \"nono new\" to generate one :) ');\n    //   }\n    // });\n    const cb = (err, stdout, stderr) => {\n      console.log(`${stdout}`);\n    }\n\n    exec(`clear`, cb);\n    exec(`cat ${noteMd}`, cb);\n\n    fs.watch(noteMd, () => {\n      exec(`clear`, cb);\n      exec(`cat ${noteMd}`, cb);\n    });\n  });\n\n\nprogram\n  .command('section')\n  .alias('s')\n  .description('create new section')\n  .action( function() {\n    co(function *() {\n      var sectionName = yield prompt('New section name: ');\n      var cliRefName = yield prompt('Cli reference key: ');\n      var description = yield prompt('Short description: ');\n\n      createSection(sectionName, cliRefName, description);\n\n      console.log(chalk.green(`new section '${sectionName}' was created!`));\n    })\n  });\n\nprogram\n  .command('init')\n  .description('initializes notes')\n  .action(function() {\n    co(function *() {\n\n      var notesDirPath = yield prompt('notes directory path (from $HOME): ');\n      var homePath = `${process.env.HOME}/${notesDirPath}`;\n      initializeNotes(homePath);\n\n      var shouldCreate = yield prompt.confirm(`Would you like me to create \"${homePath}\" for you?(Recommended) [y/N] `);\n      createDir(shouldCreate, homePath);\n      console.log('Start taking notes with', chalk.cyan('nonote new!'));\n      // TODO: create a readme\n      process.exit();\n    })\n  });\n\nprogram\n  .command('add <cli-ref> [notes...]')\n  .alias('a')\n  .description('add note to object')\n  .action(function(ref, note, cmd) {\n    try {\n      addNote(note, ref);\n      console.log(chalk.green('note added!'));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\nprogram\n  .command('remove <cli-ref> [index]')\n  .alias('r')\n  .option('-s, --section', 'remove a seciton')\n  .description('remove note from note object')\n  .action(function(ref, note, options) {\n    if (options.section && note === undefined) {\n      removeSection(ref);\n    } else {\n      try {\n        changeStatus(note, ref, removeNote);\n        console.log(chalk.green(`note at index[${note}] was removed!`));\n      } catch (e) {\n        console.log(chalk.red(e));\n      }\n    }\n  });\n\nprogram\n  .command('complete <cli-ref> [index]')\n  .alias('c')\n  .description('mark item as complete')\n  .action(function(ref, note, cmd) {\n    try {\n      changeStatus(note, ref, completeNote);\n      console.log(chalk.green(`note at index[${note}] was marked as complete!`));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\nprogram\n  .command('incomplete <cli-ref> [index]')\n  .alias('i')\n  .description('mark item as incomplete')\n  .action(function(ref, note, cmd) {\n    try {\n      changeStatus(note, ref, incompleteNote);\n      console.log(chalk.green(`note at index[${note}] was marked as incomplete!`));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\n\nprogram\n  .command('failed [cli-ref] <index>')\n  .alias('f')\n  .description('mark item as failed')\n  .action(function(ref, note, cmd) {\n    try {\n      changeStatus(note, ref, failNote);\n      console.log(chalk.green(`note at index[${note}] was marked as failed :(`));\n    } catch (e) {\n      console.log(chalk.red(e));\n    }\n  });\n\n  program.parse(process.argv);\n\n"]}